const headCellsFake = [
    {
      id: 'id',
      numeric: false,
      minWidth: 170,
      align: 'right',
      disablePadding: false,
      label: 'Dessert (100g serving)',
      format: (value) => value.toLocaleString('el-GR'),
    },
    {
      id: 'calories',
      numeric: true,
      disablePadding: false,
      label: 'Calories',
      minWidth: 170,
      align: 'right',
      format: (value) => value.toFixed(2),
    },
    {
      id: 'fat',
      numeric: true,
      disablePadding: false,
      label: 'Fat (g)',
      minWidth: 170,
      align: 'right',
      format: (value) => value.toFixed(2),
    },
    {
      id: 'carbs',
      numeric: true,
      disablePadding: false,
      label: 'Carbs (g)',
      minWidth: 170,
      align: 'right',
      format: (value) => value.toFixed(2),
    },
    {
      id: 'protein',
      numeric: true,
      disablePadding: false,
      label: 'Protein (g)',
      minWidth: 170,
      align: 'right',
      format: (value) => value.toFixed(2),
    },
  ];

  const headCellsProducts = [
    {
      id: 'ROWID',
      numeric: false,
      Width: 30,
      maxWidth: 30,
      align: 'center',
      disablePadding: false,
      label: 'A/A',
      format: (value) => value.toFixed(0),
    },
    {
      id: 'HEACTIVE',
      numeric: false,
      Width: 30,
      maxWidth: 30,
      align: 'center',
      disablePadding: false,
      label: 'Active',
      format: (value) => value.toFixed(0),
    },
    {
      id: 'HECODE',
      numeric: false,
      disablePadding: false,
      label: 'Kodikos',
      Width: 50,
      maxWidth: 50,
      align: 'center',
      format: (value) => value.toLocaleString('el-GR'),
    },
    {
      id: 'HENAME',
      numeric: false,
      disablePadding: false,
      label: 'name',
      Width: 620,
      maxWidth: 850,
      align: 'center',
      format: (value) => value.toLocaleString('el-GR'),
    },
    {
      id: 'price',
      numeric: true,
      disablePadding: false,
      label: 'price',
      Width: 100,
      maxWidth: 100,
      align: 'right',
      format: (value) => value.toFixed(2),
    },
    {
      id: 'HEMM',
      numeric: false,
      disablePadding: false,
      label: 'M.M.',
      Width: 120,
      maxWidth: 120,
      align: 'center',
      format: (value) => value.toLocaleString('el-GR'),
    },
    {
      id: 'HEVAT',
      numeric: false,
      disablePadding: false,
      label: 'VAT',
      Width: 120,
      maxWidth: 120,
      align: 'center',
      format: (value) => value.toLocaleString('el-GR'),
    },
    {
      id: 'button01',
      numeric: false,
      disablePadding: false,
      label: 'button01',
      minWidth: 50,
      maxWidth: 60,
      align: 'center',
    },
  ];

  const headCellsCustomers = [
    {
      id: 'ROWID',
      numeric: false,
      Width: 30,
      maxWidth: 30,
      align: 'center',
      disablePadding: true,
      label: 'A/A',
      format: (value) => value.toFixed(0),
    },
    {
      id: 'CSTMACTIVE',
      numeric: false,
      Width: 30,
      maxWidth: 30,
      align: 'center',
      disablePadding: true,
      label: 'Active',
      format: (value) => value.toFixed(0),
    },
    {
      id: 'CSTMCODE',
      numeric: false,
      disablePadding: true,
      label: 'Kodikos',
      Width: 40,
      maxWidth: 40,
      align: 'center',
      format: (value) => value.toLocaleString('el-GR'),
    },
    {
      id: 'CSTMNAME',
      numeric: false,
      disablePadding: true,
      label: 'name',
      Width: 620,
      maxWidth: 850,
      align: 'center',
      format: (value) => value.toLocaleString('el-GR'),
    },
    {
      id: 'CSTMDISTINCTIVETITLE',
      numeric: false,
      disablePadding: true,
      label: 'Diakritikos Titlos',
      Width: 450,
      maxWidth: 600,
      align: 'center',
      format: (value) => value.toLocaleString('el-GR'),
    },
    {
      id: 'SALESMANCODE',
      numeric: false,
      disablePadding: true,
      label: 'Politis',
      Width: 120,
      maxWidth: 120,
      align: 'center',
      format: (value) => value.toLocaleString('el-GR'),
    },
    {
      id: 'AFM',
      numeric: true,
      disablePadding: true,
      label: 'AFM',
      Width: 120,
      maxWidth: 120,
      align: 'center',
      format: (value) => value.toFixed(0),
    },
    {
      id: 'DEBIT',
      numeric: true,
      disablePadding: true,
      label: 'DEBIT',
      Width: 140,
      maxWidth: 140,
      align: 'center',
      format: (value) => value.toFixed(2),
    },
    {
      id: 'CREDIT',
      numeric: true,
      disablePadding: true,
      label: 'CREDIT',
      Width: 140,
      maxWidth: 140,
      align: 'center',
      format: (value) => value.toFixed(2),
    },
    {
      id: 'YPOLOIPO',
      numeric: true,
      disablePadding: true,
      label: 'YPOLOIPO',
      Width: 140,
      maxWidth: 140,
      align: 'center',
      format: (value) => value.toFixed(2),
    },
    {
      id: 'TZIROS',
      numeric: true,
      disablePadding: true,
      label: 'TZIROS',
      Width: 140,
      maxWidth: 140,
      align: 'center',
      format: (value) => value.toFixed(2),
    },
    {
      id: 'button01',
      numeric: false,
      disablePadding: true,
      label: 'button01',
      minWidth: 50,
      maxWidth: 60,
      align: 'center',
    },
    {
      id: 'button02',
      numeric: false,
      disablePadding: true,
      label: 'button02',
      minWidth: 50,
      maxWidth: 60,
      align: 'center',
    },
    {
      id: 'button03',
      numeric: false,
      disablePadding: true,
      label: 'button03',
      minWidth: 50,
      maxWidth: 60,
      align: 'center',
    },
  ];

  export const headers = {headCellsFake, headCellsProducts, headCellsCustomers};